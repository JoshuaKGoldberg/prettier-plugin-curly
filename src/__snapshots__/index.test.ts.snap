// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Tests > "\\n// pre comment\\nif (a)\\n\\t// inner comment\\n\\tb;\\n// post comment\\n" 1`] = `
"
------------------------------------ Input -------------------------------------

// pre comment
if (a)
	// inner comment
	b;
// post comment

------------------------------------ Output ------------------------------------
// pre comment
if (a) {
  // inner comment
  b;
}
// post comment
"
`;

exports[`Tests > "\\n// prettier-ignore\\nfunction ignored() {\\n    if(foo  .bar)\\n        return\\n}\\n" 1`] = `
"
------------------------------------ Input -------------------------------------

// prettier-ignore
function ignored() {
    if(foo  .bar)
        return
}

------------------------------------ Output ------------------------------------
// prettier-ignore
function ignored() {
    if(foo  .bar)
        return
}
"
`;

exports[`Tests > "\\nconst p = 'test';\\n\\n\\n//pre comment\\n//this is another pre comment\\nif (a) b;\\n//post comment\\n\\nsomeOtherCode();\\n" 1`] = `
"
------------------------------------ Input -------------------------------------

const p = 'test';


//pre comment
//this is another pre comment
if (a) b;
//post comment

someOtherCode();

------------------------------------ Output ------------------------------------
const p = "test";

//pre comment
//this is another pre comment
if (a) {
  b;
}
//post comment

someOtherCode();
"
`;

exports[`Tests > "\\ndo /* a */\\nb; while (c)\\n" 1`] = `
"
------------------------------------ Input -------------------------------------

do /* a */
b; while (c)

------------------------------------ Output ------------------------------------
do {
  /* a */
  b;
} while (c);
"
`;

exports[`Tests > "\\ndo //a\\nb; while (c)\\n" 1`] = `
"
------------------------------------ Input -------------------------------------

do //a
b; while (c)

------------------------------------ Output ------------------------------------
do {
  //a
  b;
} while (c);
"
`;

exports[`Tests > "\\ndo\\n/* a */\\nb; while (c)\\n" 1`] = `
"
------------------------------------ Input -------------------------------------

do
/* a */
b; while (c)

------------------------------------ Output ------------------------------------
do {
  /* a */
  b;
} while (c);
"
`;

exports[`Tests > "\\ndo\\n//a\\nb; while (c)\\n" 1`] = `
"
------------------------------------ Input -------------------------------------

do
//a
b; while (c)

------------------------------------ Output ------------------------------------
do {
  //a
  b;
} while (c);
"
`;

exports[`Tests > "\\nif (a) b;\\n_ = {\\n\\ta: [\\n\\t\\t\\"b\\",\\n\\t],\\n\\tc: \\"d\\"\\n};\\n" 1`] = `
"
------------------------------------ Input -------------------------------------

if (a) b;
_ = {
	a: [
		"b",
	],
	c: "d"
};

------------------------------------ Output ------------------------------------
if (a) {
  b;
}
_ = {
  a: ["b"],
  c: "d",
};
"
`;

exports[`Tests > "\\nif(a) //b\\nc\\n" 1`] = `
"
------------------------------------ Input -------------------------------------

if(a) //b
c

------------------------------------ Output ------------------------------------
if (a) {
  //b
  c;
}
"
`;

exports[`Tests > "\\nif(a)\\n//b\\nc\\n" 1`] = `
"
------------------------------------ Input -------------------------------------

if(a)
//b
c

------------------------------------ Output ------------------------------------
if (a) {
  //b
  c;
}
"
`;

exports[`Tests > "\\nwhile (a) // b\\n<c> d;\\n" 1`] = `
"
------------------------------------ Input -------------------------------------

while (a) // b
<c> d;

------------------------------------ Output ------------------------------------
while (a) {
  // b
  <c>d;
}
"
`;

exports[`Tests > "await 1;" 1`] = `
"
------------------------------------ Input -------------------------------------
await 1;

------------------------------------ Output ------------------------------------
await 1;
"
`;

exports[`Tests > "do { a; } while (b);" 1`] = `
"
------------------------------------ Input -------------------------------------
do { a; } while (b);

------------------------------------ Output ------------------------------------
do {
  a;
} while (b);
"
`;

exports[`Tests > "do a; while (b);" 1`] = `
"
------------------------------------ Input -------------------------------------
do a; while (b);

------------------------------------ Output ------------------------------------
do {
  a;
} while (b);
"
`;

exports[`Tests > "export { foo };" 1`] = `
"
------------------------------------ Input -------------------------------------
export { foo };

------------------------------------ Output ------------------------------------
export { foo };
"
`;

exports[`Tests > "foo; import a from 'bar'" 1`] = `
"
------------------------------------ Input -------------------------------------
foo; import a from 'bar'

------------------------------------ Output ------------------------------------
foo;
import a from "bar";
"
`;

exports[`Tests > "for (; ; ) ;" 1`] = `
"
------------------------------------ Input -------------------------------------
for (; ; ) ;

------------------------------------ Output ------------------------------------
for (;;);
"
`;

exports[`Tests > "for (; ; ) { d; }" 1`] = `
"
------------------------------------ Input -------------------------------------
for (; ; ) { d; }

------------------------------------ Output ------------------------------------
for (;;) {
  d;
}
"
`;

exports[`Tests > "for (; ; ) d;" 1`] = `
"
------------------------------------ Input -------------------------------------
for (; ; ) d;

------------------------------------ Output ------------------------------------
for (;;) {
  d;
}
"
`;

exports[`Tests > "for (a; b; c) { d; }" 1`] = `
"
------------------------------------ Input -------------------------------------
for (a; b; c) { d; }

------------------------------------ Output ------------------------------------
for (a; b; c) {
  d;
}
"
`;

exports[`Tests > "for (a; b; c) d;" 1`] = `
"
------------------------------------ Input -------------------------------------
for (a; b; c) d;

------------------------------------ Output ------------------------------------
for (a; b; c) {
  d;
}
"
`;

exports[`Tests > "for (const a in b) { c; }" 1`] = `
"
------------------------------------ Input -------------------------------------
for (const a in b) { c; }

------------------------------------ Output ------------------------------------
for (const a in b) {
  c;
}
"
`;

exports[`Tests > "for (const a in b) c;" 1`] = `
"
------------------------------------ Input -------------------------------------
for (const a in b) c;

------------------------------------ Output ------------------------------------
for (const a in b) {
  c;
}
"
`;

exports[`Tests > "for (const a of b) { c; }" 1`] = `
"
------------------------------------ Input -------------------------------------
for (const a of b) { c; }

------------------------------------ Output ------------------------------------
for (const a of b) {
  c;
}
"
`;

exports[`Tests > "for (const a of b) c;" 1`] = `
"
------------------------------------ Input -------------------------------------
for (const a of b) c;

------------------------------------ Output ------------------------------------
for (const a of b) {
  c;
}
"
`;

exports[`Tests > "if (a) { b; }" 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) { b; }

------------------------------------ Output ------------------------------------
if (a) {
  b;
}
"
`;

exports[`Tests > "if (a) { if (b) c; }" 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) { if (b) c; }

------------------------------------ Output ------------------------------------
if (a) {
  if (b) {
    c;
  }
}
"
`;

exports[`Tests > "if (a) {} else b;" 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) {} else b;

------------------------------------ Output ------------------------------------
if (a) {
} else {
  b;
}
"
`;

exports[`Tests > "if (a) b; else { c; }" 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) b; else { c; }

------------------------------------ Output ------------------------------------
if (a) {
  b;
} else {
  c;
}
"
`;

exports[`Tests > "if (a) b; else c;" 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) b; else c;

------------------------------------ Output ------------------------------------
if (a) {
  b;
} else {
  c;
}
"
`;

exports[`Tests > "if (a) b; else if (b) c;" 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) b; else if (b) c;

------------------------------------ Output ------------------------------------
if (a) {
  b;
} else if (b) {
  c;
}
"
`;

exports[`Tests > "if (a) b;" 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) b;

------------------------------------ Output ------------------------------------
if (a) {
  b;
}
"
`;

exports[`Tests > "if (a) if (b) {} else if (c) d;" 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) if (b) {} else if (c) d;

------------------------------------ Output ------------------------------------
if (a) {
  if (b) {
  } else if (c) {
    d;
  }
}
"
`;

exports[`Tests > "if (a) if (b) c;" 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) if (b) c;

------------------------------------ Output ------------------------------------
if (a) {
  if (b) {
    c;
  }
}
"
`;

exports[`Tests > "if (a) if (b) if (c) d;" 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) if (b) if (c) d;

------------------------------------ Output ------------------------------------
if (a) {
  if (b) {
    if (c) {
      d;
    }
  }
}
"
`;

exports[`Tests > "let a; let a;" 1`] = `
"
------------------------------------ Input -------------------------------------
let a; let a;

------------------------------------ Output ------------------------------------
let a;
let a;
"
`;

exports[`Tests > "new.target;" 1`] = `
"
------------------------------------ Input -------------------------------------
new.target;

------------------------------------ Output ------------------------------------
new.target;
"
`;

exports[`Tests > "return;" 1`] = `
"
------------------------------------ Input -------------------------------------
return;

------------------------------------ Output ------------------------------------
return;
"
`;

exports[`Tests > "while (a) ;" 1`] = `
"
------------------------------------ Input -------------------------------------
while (a) ;

------------------------------------ Output ------------------------------------
while (a);
"
`;

exports[`Tests > "while (a) <b />;" 1`] = `
"
------------------------------------ Input -------------------------------------
while (a) <b />;

------------------------------------ Output ------------------------------------
while (a) {
  <b />;
}
"
`;

exports[`Tests > "while (a) <b />;" 2`] = `
"
------------------------------------ Input -------------------------------------
while (a) <b />;

------------------------------------ Output ------------------------------------
while (a) {
  <b />;
}
"
`;

exports[`Tests > "while (a) <b>c;" 1`] = `
"
------------------------------------ Input -------------------------------------
while (a) <b>c;

------------------------------------ Output ------------------------------------
while (a) {
  <b>c;
}
"
`;

exports[`Tests > "while (a) { b; }" 1`] = `
"
------------------------------------ Input -------------------------------------
while (a) { b; }

------------------------------------ Output ------------------------------------
while (a) {
  b;
}
"
`;

exports[`Tests > "while (a) b;" 1`] = `
"
------------------------------------ Input -------------------------------------
while (a) b;

------------------------------------ Output ------------------------------------
while (a) {
  b;
}
"
`;

exports[`Tests > case 
// pre comment
if (a)
	// inner comment
	b;
// post comment
 1`] = `
"
------------------------------------ Input -------------------------------------

// pre comment
if (a)
	// inner comment
	b;
// post comment

------------------------------------ Output ------------------------------------
// pre comment
if (a) {
  // inner comment
  b;
}
// post comment
"
`;

exports[`Tests > case 
// prettier-ignore
function ignored() {
    if(foo  .bar)
        return
}
 1`] = `
"
------------------------------------ Input -------------------------------------

// prettier-ignore
function ignored() {
    if(foo  .bar)
        return
}

------------------------------------ Output ------------------------------------
// prettier-ignore
function ignored() {
    if(foo  .bar)
        return
}
"
`;

exports[`Tests > case 
const p = 'test';


//pre comment
//this is another pre comment
if (a) b;
//post comment

someOtherCode();
 1`] = `
"
------------------------------------ Input -------------------------------------

const p = 'test';


//pre comment
//this is another pre comment
if (a) b;
//post comment

someOtherCode();

------------------------------------ Output ------------------------------------
const p = "test";

//pre comment
//this is another pre comment
if (a) {
  b;
}
//post comment

someOtherCode();
"
`;

exports[`Tests > case 
do
/* a */
b; while (c)
 1`] = `
"
------------------------------------ Input -------------------------------------

do
/* a */
b; while (c)

------------------------------------ Output ------------------------------------
do {
  /* a */
  b;
} while (c);
"
`;

exports[`Tests > case 
do
//a
b; while (c)
 1`] = `
"
------------------------------------ Input -------------------------------------

do
//a
b; while (c)

------------------------------------ Output ------------------------------------
do {
  //a
  b;
} while (c);
"
`;

exports[`Tests > case 
do /* a */
b; while (c)
 1`] = `
"
------------------------------------ Input -------------------------------------

do /* a */
b; while (c)

------------------------------------ Output ------------------------------------
do {
  /* a */
  b;
} while (c);
"
`;

exports[`Tests > case 
do //a
b; while (c)
 1`] = `
"
------------------------------------ Input -------------------------------------

do //a
b; while (c)

------------------------------------ Output ------------------------------------
do {
  //a
  b;
} while (c);
"
`;

exports[`Tests > case 
if (a) b;
_ = {
	a: [
		"b",
	],
	c: "d"
};
 1`] = `
"
------------------------------------ Input -------------------------------------

if (a) b;
_ = {
	a: [
		"b",
	],
	c: "d"
};

------------------------------------ Output ------------------------------------
if (a) {
  b;
}
_ = {
  a: ["b"],
  c: "d",
};
"
`;

exports[`Tests > case 
if(a)
//b
c
 1`] = `
"
------------------------------------ Input -------------------------------------

if(a)
//b
c

------------------------------------ Output ------------------------------------
if (a) {
  //b
  c;
}
"
`;

exports[`Tests > case 
if(a) //b
c
 1`] = `
"
------------------------------------ Input -------------------------------------

if(a) //b
c

------------------------------------ Output ------------------------------------
if (a) {
  //b
  c;
}
"
`;

exports[`Tests > case 
while (a) // b
<c> d;
 1`] = `
"
------------------------------------ Input -------------------------------------

while (a) // b
<c> d;

------------------------------------ Output ------------------------------------
while (a) {
  // b
  <c>d;
}
"
`;

exports[`Tests > case "\\n// pre comment\\nif (a)\\n\\t// inner comment\\n\\tb;\\n// post comment\\n" 1`] = `
"
------------------------------------ Input -------------------------------------

// pre comment
if (a)
	// inner comment
	b;
// post comment

------------------------------------ Output ------------------------------------
// pre comment
if (a) {
  // inner comment
  b;
}
// post comment
"
`;

exports[`Tests > case "\\n// prettier-ignore\\nfunction ignored() {\\n    if(foo  .bar)\\n        return\\n}\\n" 1`] = `
"
------------------------------------ Input -------------------------------------

// prettier-ignore
function ignored() {
    if(foo  .bar)
        return
}

------------------------------------ Output ------------------------------------
// prettier-ignore
function ignored() {
    if(foo  .bar)
        return
}
"
`;

exports[`Tests > case "\\nconst p = 'test';\\n\\n\\n//pre comment\\n//this is another pre comment\\nif (a) b;\\n//post comment\\n\\nsomeOtherCode();\\n" 1`] = `
"
------------------------------------ Input -------------------------------------

const p = 'test';


//pre comment
//this is another pre comment
if (a) b;
//post comment

someOtherCode();

------------------------------------ Output ------------------------------------
const p = "test";

//pre comment
//this is another pre comment
if (a) {
  b;
}
//post comment

someOtherCode();
"
`;

exports[`Tests > case "\\ndo /* a */\\nb; while (c)\\n" 1`] = `
"
------------------------------------ Input -------------------------------------

do /* a */
b; while (c)

------------------------------------ Output ------------------------------------
do {
  /* a */
  b;
} while (c);
"
`;

exports[`Tests > case "\\ndo //a\\nb; while (c)\\n" 1`] = `
"
------------------------------------ Input -------------------------------------

do //a
b; while (c)

------------------------------------ Output ------------------------------------
do {
  //a
  b;
} while (c);
"
`;

exports[`Tests > case "\\ndo\\n/* a */\\nb; while (c)\\n" 1`] = `
"
------------------------------------ Input -------------------------------------

do
/* a */
b; while (c)

------------------------------------ Output ------------------------------------
do {
  /* a */
  b;
} while (c);
"
`;

exports[`Tests > case "\\ndo\\n//a\\nb; while (c)\\n" 1`] = `
"
------------------------------------ Input -------------------------------------

do
//a
b; while (c)

------------------------------------ Output ------------------------------------
do {
  //a
  b;
} while (c);
"
`;

exports[`Tests > case "\\nif (a) b;\\n_ = {\\n\\ta: [\\n\\t\\t\\"b\\",\\n\\t],\\n\\tc: \\"d\\"\\n};\\n" 1`] = `
"
------------------------------------ Input -------------------------------------

if (a) b;
_ = {
	a: [
		"b",
	],
	c: "d"
};

------------------------------------ Output ------------------------------------
if (a) {
  b;
}
_ = {
  a: ["b"],
  c: "d",
};
"
`;

exports[`Tests > case "\\nif(a) //b\\nc\\n" 1`] = `
"
------------------------------------ Input -------------------------------------

if(a) //b
c

------------------------------------ Output ------------------------------------
if (a) {
  //b
  c;
}
"
`;

exports[`Tests > case "\\nif(a)\\n//b\\nc\\n" 1`] = `
"
------------------------------------ Input -------------------------------------

if(a)
//b
c

------------------------------------ Output ------------------------------------
if (a) {
  //b
  c;
}
"
`;

exports[`Tests > case "\\nwhile (a) // b\\n<c> d;\\n" 1`] = `
"
------------------------------------ Input -------------------------------------

while (a) // b
<c> d;

------------------------------------ Output ------------------------------------
while (a) {
  // b
  <c>d;
}
"
`;

exports[`Tests > case "await 1;" 1`] = `
"
------------------------------------ Input -------------------------------------
await 1;

------------------------------------ Output ------------------------------------
await 1;
"
`;

exports[`Tests > case "do { a; } while (b);" 1`] = `
"
------------------------------------ Input -------------------------------------
do { a; } while (b);

------------------------------------ Output ------------------------------------
do {
  a;
} while (b);
"
`;

exports[`Tests > case "do a; while (b);" 1`] = `
"
------------------------------------ Input -------------------------------------
do a; while (b);

------------------------------------ Output ------------------------------------
do {
  a;
} while (b);
"
`;

exports[`Tests > case "export { foo };" 1`] = `
"
------------------------------------ Input -------------------------------------
export { foo };

------------------------------------ Output ------------------------------------
export { foo };
"
`;

exports[`Tests > case "foo; import a from 'bar'" 1`] = `
"
------------------------------------ Input -------------------------------------
foo; import a from 'bar'

------------------------------------ Output ------------------------------------
foo;
import a from "bar";
"
`;

exports[`Tests > case "for (; ; ) ;" 1`] = `
"
------------------------------------ Input -------------------------------------
for (; ; ) ;

------------------------------------ Output ------------------------------------
for (;;);
"
`;

exports[`Tests > case "for (; ; ) { d; }" 1`] = `
"
------------------------------------ Input -------------------------------------
for (; ; ) { d; }

------------------------------------ Output ------------------------------------
for (;;) {
  d;
}
"
`;

exports[`Tests > case "for (; ; ) d;" 1`] = `
"
------------------------------------ Input -------------------------------------
for (; ; ) d;

------------------------------------ Output ------------------------------------
for (;;) {
  d;
}
"
`;

exports[`Tests > case "for (a; b; c) { d; }" 1`] = `
"
------------------------------------ Input -------------------------------------
for (a; b; c) { d; }

------------------------------------ Output ------------------------------------
for (a; b; c) {
  d;
}
"
`;

exports[`Tests > case "for (a; b; c) d;" 1`] = `
"
------------------------------------ Input -------------------------------------
for (a; b; c) d;

------------------------------------ Output ------------------------------------
for (a; b; c) {
  d;
}
"
`;

exports[`Tests > case "for (const a in b) { c; }" 1`] = `
"
------------------------------------ Input -------------------------------------
for (const a in b) { c; }

------------------------------------ Output ------------------------------------
for (const a in b) {
  c;
}
"
`;

exports[`Tests > case "for (const a in b) c;" 1`] = `
"
------------------------------------ Input -------------------------------------
for (const a in b) c;

------------------------------------ Output ------------------------------------
for (const a in b) {
  c;
}
"
`;

exports[`Tests > case "for (const a of b) { c; }" 1`] = `
"
------------------------------------ Input -------------------------------------
for (const a of b) { c; }

------------------------------------ Output ------------------------------------
for (const a of b) {
  c;
}
"
`;

exports[`Tests > case "for (const a of b) c;" 1`] = `
"
------------------------------------ Input -------------------------------------
for (const a of b) c;

------------------------------------ Output ------------------------------------
for (const a of b) {
  c;
}
"
`;

exports[`Tests > case "if (a) { b; }" 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) { b; }

------------------------------------ Output ------------------------------------
if (a) {
  b;
}
"
`;

exports[`Tests > case "if (a) { if (b) c; }" 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) { if (b) c; }

------------------------------------ Output ------------------------------------
if (a) {
  if (b) {
    c;
  }
}
"
`;

exports[`Tests > case "if (a) {} else b;" 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) {} else b;

------------------------------------ Output ------------------------------------
if (a) {
} else {
  b;
}
"
`;

exports[`Tests > case "if (a) b; else { c; }" 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) b; else { c; }

------------------------------------ Output ------------------------------------
if (a) {
  b;
} else {
  c;
}
"
`;

exports[`Tests > case "if (a) b; else c;" 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) b; else c;

------------------------------------ Output ------------------------------------
if (a) {
  b;
} else {
  c;
}
"
`;

exports[`Tests > case "if (a) b; else if (b) c;" 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) b; else if (b) c;

------------------------------------ Output ------------------------------------
if (a) {
  b;
} else if (b) {
  c;
}
"
`;

exports[`Tests > case "if (a) b;" 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) b;

------------------------------------ Output ------------------------------------
if (a) {
  b;
}
"
`;

exports[`Tests > case "if (a) if (b) {} else if (c) d;" 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) if (b) {} else if (c) d;

------------------------------------ Output ------------------------------------
if (a) {
  if (b) {
  } else if (c) {
    d;
  }
}
"
`;

exports[`Tests > case "if (a) if (b) c;" 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) if (b) c;

------------------------------------ Output ------------------------------------
if (a) {
  if (b) {
    c;
  }
}
"
`;

exports[`Tests > case "if (a) if (b) if (c) d;" 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) if (b) if (c) d;

------------------------------------ Output ------------------------------------
if (a) {
  if (b) {
    if (c) {
      d;
    }
  }
}
"
`;

exports[`Tests > case "let a; let a;" 1`] = `
"
------------------------------------ Input -------------------------------------
let a; let a;

------------------------------------ Output ------------------------------------
let a;
let a;
"
`;

exports[`Tests > case "new.target;" 1`] = `
"
------------------------------------ Input -------------------------------------
new.target;

------------------------------------ Output ------------------------------------
new.target;
"
`;

exports[`Tests > case "return;" 1`] = `
"
------------------------------------ Input -------------------------------------
return;

------------------------------------ Output ------------------------------------
return;
"
`;

exports[`Tests > case "while (a) ;" 1`] = `
"
------------------------------------ Input -------------------------------------
while (a) ;

------------------------------------ Output ------------------------------------
while (a);
"
`;

exports[`Tests > case "while (a) <b>c;" 1`] = `
"
------------------------------------ Input -------------------------------------
while (a) <b>c;

------------------------------------ Output ------------------------------------
while (a) {
  <b>c;
}
"
`;

exports[`Tests > case "while (a) { b; }" 1`] = `
"
------------------------------------ Input -------------------------------------
while (a) { b; }

------------------------------------ Output ------------------------------------
while (a) {
  b;
}
"
`;

exports[`Tests > case "while (a) b;" 1`] = `
"
------------------------------------ Input -------------------------------------
while (a) b;

------------------------------------ Output ------------------------------------
while (a) {
  b;
}
"
`;

exports[`Tests > case 1`] = `
"
------------------------------------ Input -------------------------------------
do a; while (b);

------------------------------------ Output ------------------------------------
do {
  a;
} while (b);
"
`;

exports[`Tests > case 2`] = `
"
------------------------------------ Input -------------------------------------
do { a; } while (b);

------------------------------------ Output ------------------------------------
do {
  a;
} while (b);
"
`;

exports[`Tests > case 3`] = `
"
------------------------------------ Input -------------------------------------

do
/* a */
b; while (c)

------------------------------------ Output ------------------------------------
do {
  /* a */
  b;
} while (c);
"
`;

exports[`Tests > case 4`] = `
"
------------------------------------ Input -------------------------------------

do /* a */
b; while (c)

------------------------------------ Output ------------------------------------
do {
  /* a */
  b;
} while (c);
"
`;

exports[`Tests > case 5`] = `
"
------------------------------------ Input -------------------------------------

do
//a
b; while (c)

------------------------------------ Output ------------------------------------
do {
  //a
  b;
} while (c);
"
`;

exports[`Tests > case 6`] = `
"
------------------------------------ Input -------------------------------------

do //a
b; while (c)

------------------------------------ Output ------------------------------------
do {
  //a
  b;
} while (c);
"
`;

exports[`Tests > case 7`] = `
"
------------------------------------ Input -------------------------------------
for (; ; ) ;

------------------------------------ Output ------------------------------------
for (;;);
"
`;

exports[`Tests > case 8`] = `
"
------------------------------------ Input -------------------------------------
for (; ; ) d;

------------------------------------ Output ------------------------------------
for (;;) {
  d;
}
"
`;

exports[`Tests > case 9`] = `
"
------------------------------------ Input -------------------------------------
for (; ; ) { d; }

------------------------------------ Output ------------------------------------
for (;;) {
  d;
}
"
`;

exports[`Tests > case 10`] = `
"
------------------------------------ Input -------------------------------------
for (a; b; c) d;

------------------------------------ Output ------------------------------------
for (a; b; c) {
  d;
}
"
`;

exports[`Tests > case 11`] = `
"
------------------------------------ Input -------------------------------------
for (a; b; c) { d; }

------------------------------------ Output ------------------------------------
for (a; b; c) {
  d;
}
"
`;

exports[`Tests > case 12`] = `
"
------------------------------------ Input -------------------------------------
for (const a in b) c;

------------------------------------ Output ------------------------------------
for (const a in b) {
  c;
}
"
`;

exports[`Tests > case 13`] = `
"
------------------------------------ Input -------------------------------------
for (const a in b) { c; }

------------------------------------ Output ------------------------------------
for (const a in b) {
  c;
}
"
`;

exports[`Tests > case 14`] = `
"
------------------------------------ Input -------------------------------------
for (const a of b) c;

------------------------------------ Output ------------------------------------
for (const a of b) {
  c;
}
"
`;

exports[`Tests > case 15`] = `
"
------------------------------------ Input -------------------------------------
for (const a of b) { c; }

------------------------------------ Output ------------------------------------
for (const a of b) {
  c;
}
"
`;

exports[`Tests > case 16`] = `
"
------------------------------------ Input -------------------------------------
if (a) b;

------------------------------------ Output ------------------------------------
if (a) {
  b;
}
"
`;

exports[`Tests > case 17`] = `
"
------------------------------------ Input -------------------------------------
if (a) { b; }

------------------------------------ Output ------------------------------------
if (a) {
  b;
}
"
`;

exports[`Tests > case 18`] = `
"
------------------------------------ Input -------------------------------------
if (a) b; else c;

------------------------------------ Output ------------------------------------
if (a) {
  b;
} else {
  c;
}
"
`;

exports[`Tests > case 19`] = `
"
------------------------------------ Input -------------------------------------
if (a) {} else b;

------------------------------------ Output ------------------------------------
if (a) {
} else {
  b;
}
"
`;

exports[`Tests > case 20`] = `
"
------------------------------------ Input -------------------------------------
if (a) b; else { c; }

------------------------------------ Output ------------------------------------
if (a) {
  b;
} else {
  c;
}
"
`;

exports[`Tests > case 21`] = `
"
------------------------------------ Input -------------------------------------
if (a) b; else if (b) c;

------------------------------------ Output ------------------------------------
if (a) {
  b;
} else if (b) {
  c;
}
"
`;

exports[`Tests > case 22`] = `
"
------------------------------------ Input -------------------------------------
if (a) if (b) c;

------------------------------------ Output ------------------------------------
if (a) {
  if (b) {
    c;
  }
}
"
`;

exports[`Tests > case 23`] = `
"
------------------------------------ Input -------------------------------------
if (a) { if (b) c; }

------------------------------------ Output ------------------------------------
if (a) {
  if (b) {
    c;
  }
}
"
`;

exports[`Tests > case 24`] = `
"
------------------------------------ Input -------------------------------------
if (a) if (b) if (c) d;

------------------------------------ Output ------------------------------------
if (a) {
  if (b) {
    if (c) {
      d;
    }
  }
}
"
`;

exports[`Tests > case 25`] = `
"
------------------------------------ Input -------------------------------------
if (a) if (b) {} else if (c) d;

------------------------------------ Output ------------------------------------
if (a) {
  if (b) {
  } else if (c) {
    d;
  }
}
"
`;

exports[`Tests > case 26`] = `
"
------------------------------------ Input -------------------------------------

if(a) //b
c

------------------------------------ Output ------------------------------------
if (a) {
  //b
  c;
}
"
`;

exports[`Tests > case 27`] = `
"
------------------------------------ Input -------------------------------------

if(a)
//b
c

------------------------------------ Output ------------------------------------
if (a) {
  //b
  c;
}
"
`;

exports[`Tests > case 28`] = `
"
------------------------------------ Input -------------------------------------
let a; let a;

------------------------------------ Output ------------------------------------
let a;
let a;
"
`;

exports[`Tests > case 29`] = `
"
------------------------------------ Input -------------------------------------
foo; import a from 'bar'

------------------------------------ Output ------------------------------------
foo;
import a from "bar";
"
`;

exports[`Tests > case 30`] = `
"
------------------------------------ Input -------------------------------------
return;

------------------------------------ Output ------------------------------------
return;
"
`;

exports[`Tests > case 31`] = `
"
------------------------------------ Input -------------------------------------
new.target;

------------------------------------ Output ------------------------------------
new.target;
"
`;

exports[`Tests > case 32`] = `
"
------------------------------------ Input -------------------------------------
await 1;

------------------------------------ Output ------------------------------------
await 1;
"
`;

exports[`Tests > case 33`] = `
"
------------------------------------ Input -------------------------------------
export { foo };

------------------------------------ Output ------------------------------------
export { foo };
"
`;

exports[`Tests > case 34`] = `
"
------------------------------------ Input -------------------------------------
while (a) ;

------------------------------------ Output ------------------------------------
while (a);
"
`;

exports[`Tests > case 35`] = `
"
------------------------------------ Input -------------------------------------
while (a) b;

------------------------------------ Output ------------------------------------
while (a) {
  b;
}
"
`;

exports[`Tests > case 36`] = `
"
------------------------------------ Input -------------------------------------
while (a) { b; }

------------------------------------ Output ------------------------------------
while (a) {
  b;
}
"
`;

exports[`Tests > case 37`] = `
"
------------------------------------ Input -------------------------------------
while (a) <b>c;

------------------------------------ Output ------------------------------------
while (a) {
  <b>c;
}
"
`;

exports[`Tests > case 38`] = `
"
------------------------------------ Input -------------------------------------
while (a) <b />;

------------------------------------ Output ------------------------------------
while (a) {
  <b />;
}
"
`;

exports[`Tests > case 39`] = `
"
------------------------------------ Input -------------------------------------
while (a) <b />;

------------------------------------ Output ------------------------------------
while (a) {
  <b />;
}
"
`;

exports[`Tests > case 40`] = `
"
------------------------------------ Input -------------------------------------

while (a) // b
<c> d;

------------------------------------ Output ------------------------------------
while (a) {
  // b
  <c>d;
}
"
`;

exports[`Tests > case 41`] = `
"
------------------------------------ Input -------------------------------------

if (a) b;
_ = {
	a: [
		"b",
	],
	c: "d"
};

------------------------------------ Output ------------------------------------
if (a) {
  b;
}
_ = {
  a: ["b"],
  c: "d",
};
"
`;

exports[`Tests > case 42`] = `
"
------------------------------------ Input -------------------------------------

const p = 'test';


//pre comment
//this is another pre comment
if (a) b;
//post comment

someOtherCode();

------------------------------------ Output ------------------------------------
const p = "test";

//pre comment
//this is another pre comment
if (a) {
  b;
}
//post comment

someOtherCode();
"
`;

exports[`Tests > case 43`] = `
"
------------------------------------ Input -------------------------------------

// pre comment
if (a)
	// inner comment
	b;
// post comment

------------------------------------ Output ------------------------------------
// pre comment
if (a) {
  // inner comment
  b;
}
// post comment
"
`;

exports[`Tests > case 44`] = `
"
------------------------------------ Input -------------------------------------

// prettier-ignore
function ignored() {
    if(foo  .bar)
        return
}

------------------------------------ Output ------------------------------------
// prettier-ignore
function ignored() {
    if(foo  .bar)
        return
}
"
`;

exports[`Tests > case await 1; 1`] = `
"
------------------------------------ Input -------------------------------------
await 1;

------------------------------------ Output ------------------------------------
await 1;
"
`;

exports[`Tests > case do { a; } while (b); 1`] = `
"
------------------------------------ Input -------------------------------------
do { a; } while (b);

------------------------------------ Output ------------------------------------
do {
  a;
} while (b);
"
`;

exports[`Tests > case do a; while (b); 1`] = `
"
------------------------------------ Input -------------------------------------
do a; while (b);

------------------------------------ Output ------------------------------------
do {
  a;
} while (b);
"
`;

exports[`Tests > case export { foo }; 1`] = `
"
------------------------------------ Input -------------------------------------
export { foo };

------------------------------------ Output ------------------------------------
export { foo };
"
`;

exports[`Tests > case foo; import a from 'bar' 1`] = `
"
------------------------------------ Input -------------------------------------
foo; import a from 'bar'

------------------------------------ Output ------------------------------------
foo;
import a from "bar";
"
`;

exports[`Tests > case for (; ; ) ; 1`] = `
"
------------------------------------ Input -------------------------------------
for (; ; ) ;

------------------------------------ Output ------------------------------------
for (;;);
"
`;

exports[`Tests > case for (; ; ) { d; } 1`] = `
"
------------------------------------ Input -------------------------------------
for (; ; ) { d; }

------------------------------------ Output ------------------------------------
for (;;) {
  d;
}
"
`;

exports[`Tests > case for (; ; ) d; 1`] = `
"
------------------------------------ Input -------------------------------------
for (; ; ) d;

------------------------------------ Output ------------------------------------
for (;;) {
  d;
}
"
`;

exports[`Tests > case for (a; b; c) { d; } 1`] = `
"
------------------------------------ Input -------------------------------------
for (a; b; c) { d; }

------------------------------------ Output ------------------------------------
for (a; b; c) {
  d;
}
"
`;

exports[`Tests > case for (a; b; c) d; 1`] = `
"
------------------------------------ Input -------------------------------------
for (a; b; c) d;

------------------------------------ Output ------------------------------------
for (a; b; c) {
  d;
}
"
`;

exports[`Tests > case for (const a in b) { c; } 1`] = `
"
------------------------------------ Input -------------------------------------
for (const a in b) { c; }

------------------------------------ Output ------------------------------------
for (const a in b) {
  c;
}
"
`;

exports[`Tests > case for (const a in b) c; 1`] = `
"
------------------------------------ Input -------------------------------------
for (const a in b) c;

------------------------------------ Output ------------------------------------
for (const a in b) {
  c;
}
"
`;

exports[`Tests > case for (const a of b) { c; } 1`] = `
"
------------------------------------ Input -------------------------------------
for (const a of b) { c; }

------------------------------------ Output ------------------------------------
for (const a of b) {
  c;
}
"
`;

exports[`Tests > case for (const a of b) c; 1`] = `
"
------------------------------------ Input -------------------------------------
for (const a of b) c;

------------------------------------ Output ------------------------------------
for (const a of b) {
  c;
}
"
`;

exports[`Tests > case if (a) { b; } 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) { b; }

------------------------------------ Output ------------------------------------
if (a) {
  b;
}
"
`;

exports[`Tests > case if (a) { if (b) c; } 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) { if (b) c; }

------------------------------------ Output ------------------------------------
if (a) {
  if (b) {
    c;
  }
}
"
`;

exports[`Tests > case if (a) {} else b; 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) {} else b;

------------------------------------ Output ------------------------------------
if (a) {
} else {
  b;
}
"
`;

exports[`Tests > case if (a) b; 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) b;

------------------------------------ Output ------------------------------------
if (a) {
  b;
}
"
`;

exports[`Tests > case if (a) b; else { c; } 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) b; else { c; }

------------------------------------ Output ------------------------------------
if (a) {
  b;
} else {
  c;
}
"
`;

exports[`Tests > case if (a) b; else c; 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) b; else c;

------------------------------------ Output ------------------------------------
if (a) {
  b;
} else {
  c;
}
"
`;

exports[`Tests > case if (a) b; else if (b) c; 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) b; else if (b) c;

------------------------------------ Output ------------------------------------
if (a) {
  b;
} else if (b) {
  c;
}
"
`;

exports[`Tests > case if (a) if (b) {} else if (c) d; 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) if (b) {} else if (c) d;

------------------------------------ Output ------------------------------------
if (a) {
  if (b) {
  } else if (c) {
    d;
  }
}
"
`;

exports[`Tests > case if (a) if (b) c; 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) if (b) c;

------------------------------------ Output ------------------------------------
if (a) {
  if (b) {
    c;
  }
}
"
`;

exports[`Tests > case if (a) if (b) if (c) d; 1`] = `
"
------------------------------------ Input -------------------------------------
if (a) if (b) if (c) d;

------------------------------------ Output ------------------------------------
if (a) {
  if (b) {
    if (c) {
      d;
    }
  }
}
"
`;

exports[`Tests > case let a; let a; 1`] = `
"
------------------------------------ Input -------------------------------------
let a; let a;

------------------------------------ Output ------------------------------------
let a;
let a;
"
`;

exports[`Tests > case new.target; 1`] = `
"
------------------------------------ Input -------------------------------------
new.target;

------------------------------------ Output ------------------------------------
new.target;
"
`;

exports[`Tests > case return; 1`] = `
"
------------------------------------ Input -------------------------------------
return;

------------------------------------ Output ------------------------------------
return;
"
`;

exports[`Tests > case while (a) ; 1`] = `
"
------------------------------------ Input -------------------------------------
while (a) ;

------------------------------------ Output ------------------------------------
while (a);
"
`;

exports[`Tests > case while (a) <b>c; 1`] = `
"
------------------------------------ Input -------------------------------------
while (a) <b>c;

------------------------------------ Output ------------------------------------
while (a) {
  <b>c;
}
"
`;

exports[`Tests > case while (a) { b; } 1`] = `
"
------------------------------------ Input -------------------------------------
while (a) { b; }

------------------------------------ Output ------------------------------------
while (a) {
  b;
}
"
`;

exports[`Tests > case while (a) b; 1`] = `
"
------------------------------------ Input -------------------------------------
while (a) b;

------------------------------------ Output ------------------------------------
while (a) {
  b;
}
"
`;
